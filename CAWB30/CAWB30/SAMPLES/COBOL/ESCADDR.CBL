*$CALL,APOST,COMP-5
 IDENTIFICATION DIVISION.
 PROGRAM-ID. ESCADDR.
*
*  Sample name/address file maintenance program. This program
*  illustrates screen and indexed file usage with CA-Realia COBOL.
*
*  Copyright (c) 1992 Computer Associates International, Inc.
*
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-PC.
 OBJECT-COMPUTER. IBM-PC.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
*
*    Name/address file
*
     SELECT NAME-FILE
         ASSIGN TO 'NAMEADDR.DAT'
	 ORGANIZATION IS INDEXED
	 RECORD KEY IS NA-NAME
	 ALTERNATE RECORD KEY IS NA-ZIP WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-PHONE WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-COMPANY WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-ST-CITY WITH DUPLICATES
	 ACCESS MODE IS DYNAMIC
	 FILE STATUS IS NAME-FILE-STATUS.
 DATA DIVISION.
 FILE SECTION.
*
*    Name/address file
*
 FD  NAME-FILE
     LABEL RECORD IS STANDARD.
*
*    Name/address file record
*
 01  NA-RECORD.
     05  NA-NAME.
	 10  NA-LAST-NAME		   PIC X(20).
	 10  NA-FIRST-NAME		   PIC X(10).
	 10  NA-INITIAL 		   PIC X.
     05  NA-ZIP 			   PIC X(9).
     05  NA-COMPANY			   PIC X(50).
     05  NA-PHONE			   PIC X(10).
     05  NA-ST-CITY.
	 10  NA-STATE			   PIC XX.
	 10  NA-CITY			   PIC X(15).
     05  NA-COMMENT			   PIC X(50).
     05  NA-ADDRESS			   PIC X(50)
	 OCCURS 4 TIMES INDEXED BY NA-ADDRESS-INDEX.
     05  FILLER 			   PIC X(33).
*
 WORKING-STORAGE SECTION.
*
*    Name/address file status
*
 01  NAME-FILE-STATUS			   PIC XX.
 01  FILLER REDEFINES NAME-FILE-STATUS.
     05  NAME-FILE-STATUS-X1		   PIC X.
     05  NAME-FILE-STATUS-X2		   PIC X.
*
*    Work variables
*
 01  FILLER.
     05  TEMP1				   PIC S9(4) COMP-5.
     05  TEMP1-D REDEFINES TEMP1.
	 10  TEMP1-LSB			   PIC X.
	 10  TEMP1-MSB			   PIC X.
     05  TEMP2				   PIC S9(4) COMP-5.
     05  TEMP3				   PIC S9(4) COMP-5.
     05  TEMP4				   PIC S9(4) COMP-5.
     05  ELB.
	 10  FILLER PIC S9(4) COMP-4 VALUE +7003.
*
*    Special key values and the functions they perform
*
*    Carriage-return			   move to next field
*    Tab				   move to next field
*    Shift-Tab				   move to previous field
*    Escape				   Clear all input fields
*    End				   Erase field
*    Control-F1 			   Terminate program
*    F1 				   Add record
*    F2 				   Read record by key
*    F3 				   Read next record
*    F4 				   Update record
*    F5 				   Delete record
*
     05  C-RETURN   VALUE +13		   PIC S9(4) COMP-5.
     05  C-TAB	    VALUE +9		   PIC S9(4) COMP-5.
     05  C-BACKTAB  VALUE +15		   PIC S9(4) COMP-5.
     05  C-ESC	    VALUE +27		   PIC S9(4) COMP-5.
     05  C-HOME     VALUE +71		   PIC S9(4) COMP-5.
     05  C-END	    VALUE +79		   PIC S9(4) COMP-5.
     05  C-CTRL-F1  VALUE +94		   PIC S9(4) COMP-5.
     05  F-TERMINATE REDEFINES C-CTRL-F1   PIC S9(4) COMP-5.
     05  C-F1	    VALUE +59		   PIC S9(4) COMP-5.
     05  F-ADD REDEFINES C-F1		   PIC S9(4) COMP-5.
     05  C-F2	    VALUE +60		   PIC S9(4) COMP-5.
     05  F-READ REDEFINES C-F2		   PIC S9(4) COMP-5.
     05  C-F3	    VALUE +61		   PIC S9(4) COMP-5.
     05  F-NEXT REDEFINES C-F3		   PIC S9(4) COMP-5.
     05  C-F4	    VALUE +62		   PIC S9(4) COMP-5.
     05  F-UPDATE REDEFINES C-F4	   PIC S9(4) COMP-5.
     05  C-F5	    VALUE +63		   PIC S9(4) COMP-5.
     05  F-DELETE REDEFINES C-F5	   PIC S9(4) COMP-5.
*
*    Escape sequences used in attribute setting
*
     05  ATTR-NORMAL.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '0m'.
     05  ATTR-BRIGHT.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '1m'.
     05  ATTR-BLINK.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '5m'.
     05  ATTR-BRIGHT-BLINK.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC X(4) VALUE '1;5m'.
     05  ATTR-REVERSE-VIDEO.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '7m'.
*
*    Escape sequence to clear screen
*
     05  SCR-CLEAR-SCREEN.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '0m'.
	 10  FILLER	      VALUE 7003   PIC 9(4) COMP-4.
         10  FILLER                        PIC XX VALUE '2J'.
*
*    Value which sounds bell when displayed
*
     05  C-BELL-INT VALUE +7		   PIC S9(4) COMP-5.
     05  FILLER REDEFINES C-BELL-INT.
	 10  C-BELL			   PIC X.
	 10  FILLER			   PIC X.
*
*    Area to contain message text for ISSUE-MESSAGE
*
 01  MESSAGE-TEXT			   PIC X(30).
*
*    Field table. Contains one entry per input field. Each entry
*    contains the line, column, and length is bytes of the field.
*
 01  FILLER.
     05  FLD-COUNT VALUE +13		   PIC S9(4) COMP-5.
     05  FLD-ADDRESS-MIN VALUE +6	   PIC S9(4) COMP-5.
     05  FLD-VALUES.
	 10  FLD-NAME-FIRST.
	     15  FILLER 		   PIC 99 VALUE 3.
	     15  FILLER 		   PIC 99 VALUE 24.
	 10  FILLER  VALUE +10		   PIC S9(4) COMP-5.
	 10  FLD-NAME-LAST.
	     15  FILLER 		   PIC 99 VALUE 3.
	     15  FILLER 		   PIC 99 VALUE 41.
	 10  FILLER  VALUE +20		   PIC S9(4) COMP-5.
	 10  FLD-INITIAL.
	     15  FILLER 		   PIC 99 VALUE 3.
	     15  FILLER 		   PIC 99 VALUE 64.
	 10  FILLER  VALUE +1		   PIC S9(4) COMP-5.
	 10  FLD-PHONE.
	     15  FILLER 		   PIC 99 VALUE 4.
	     15  FILLER 		   PIC 99 VALUE 24.
	 10  FILLER  VALUE +10		   PIC S9(4) COMP-5.
	 10  FLD-COMPANY.
	     15  FILLER 		   PIC 99 VALUE 5.
	     15  FILLER 		   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
	 10  FILLER			   PIC 99 VALUE 6.
	 10  FILLER			   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
	 10  FILLER			   PIC 99 VALUE 7.
	 10  FILLER			   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
	 10  FILLER			   PIC 99 VALUE 8.
	 10  FILLER			   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
	 10  FILLER			   PIC 99 VALUE 9.
	 10  FILLER			   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
	 10  FLD-CITY.
	     15  FILLER 		   PIC 99 VALUE 10.
	     15  FILLER 		   PIC 99 VALUE 24.
	 10  FILLER  VALUE +15		   PIC S9(4) COMP-5.
	 10  FLD-STATE.
	     15  FILLER 		   PIC 99 VALUE 11.
	     15  FILLER 		   PIC 99 VALUE 18.
	 10  FILLER  VALUE +2		   PIC S9(4) COMP-5.
	 10  FLD-ZIP.
	     15  FILLER 		   PIC 99 VALUE 11.
	     15  FILLER 		   PIC 99 VALUE 31.
	 10  FILLER  VALUE +9		   PIC S9(4) COMP-5.
	 10  FILLER			   PIC 99 VALUE 14.
	 10  FILLER			   PIC 99 VALUE 24.
	 10  FILLER  VALUE +50		   PIC S9(4) COMP-5.
     05  FILLER REDEFINES FLD-VALUES.
	 10  FLD-ENTRY OCCURS 13 TIMES
	     INDEXED BY FLD-INDEX FLD-INDEX2.
	     15  FLD-LINE		   PIC 99.
	     15  FLD-COLUMN		   PIC 99.
	     15  FLD-LENGTH		   PIC S9(4) COMP-5.
*
*    Data fields
*
 01  DATA-RECORD.
     05  DATA-NAME.
	 10  DATA-LAST-NAME		   PIC X(20).
	 10  DATA-FIRST-NAME		   PIC X(10).
	 10  DATA-INITIAL		   PIC X.
     05  DATA-ZIP			   PIC X(9).
     05  DATA-COMPANY			   PIC X(50).
     05  DATA-PHONE			   PIC X(10).
     05  DATA-ST-CITY.
	 10  DATA-STATE 		   PIC X(2).
	 10  DATA-CITY			   PIC X(15).
     05  DATA-ADDRESS			   PIC X(50)
	 OCCURS 4 TIMES.
     05  DATA-COMMENT			   PIC X(50).
*
*    Variable length field for ACCEPT and DISPLAY
*
 01  VL-LENGTH				   PIC S9(4) COMP-5.
 01  VL-FIELD.
     05  VL-CHAR PIC X OCCURS 1 TO 80 TIMES
	 DEPENDING ON VL-LENGTH.
*
*    Parameter for DISPLAY_GET_CURSOR routine.
*
 01  CURPOS.
     05  CUR-LINE			   PIC S9999 COMP-5.
     05  CUR-COLUMN			   PIC S9999 COMP-5.
/
*    Screen literals. Displayed only once.
*
 01  SCREEN-LITERALS.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '2J'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '7m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(17) VALUE '1;35HName/Address'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(4) VALUE '0;1m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(16) VALUE '3;10HFirst Name:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(10) VALUE '3;35HLast:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(19) VALUE '4;10HPhone:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(18) VALUE '5;10HCompany name:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '0m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(15) VALUE '6;10HAddress 1:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(15) VALUE '7;10HAddress 2:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(15) VALUE '8;10HAddress 3:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(15) VALUE '9;10HAddress 4:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '1m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(11) VALUE '10;10HCity:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(12) VALUE '11;10HState:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(22) VALUE '11;21HZip code:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '0m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(16) VALUE '14;10HComments:'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '7m'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC X(6) VALUE '25;17H'.
     05  FILLER  PIC X(46)
         VALUE 'F1-Add  F2-Read  F3-Next  F4-Update  F5-Delete'.
     05  FILLER  PIC X(14)
         VALUE '  Ctrl F1-Exit'.
     05  FILLER  PIC S9(4) COMP-4 VALUE +7003.
     05  FILLER  PIC XX VALUE '0m'.
*
 01  ACCEPT-PARMS.
     05  ACCEPT-AUTO-ENTER		   PIC X.
     05  ACCEPT-TEST-EMPTY		   PIC X.
     05  ACCEPT-FILLE-REQUIRED		   PIC X.
     05  ACCEPT-CURSOR-TERMINATORS	   PIC X.
     05  ACCEPT-ENTRY-REQUIRED		   PIC X.
     05  ACCEPT-NO-ENTER-ECHO		   PIC X.
     05  FILLER 			   PIC X(8).
/
*    Program which allows maintenance of the name address file.
*
 PROCEDURE DIVISION.
 DECLARATIVES.
 DECL-SECTION SECTION.
     USE AFTER STANDARD ERROR PROCEDURE ON NAME-FILE.
 DECL-PAR.
     IF NAME-FILE-STATUS-X1 IS EQUAL TO '9'
     AND NAME-FILE-STATUS-X2 IS NOT EQUAL TO '2'
	 PERFORM SCR-CLEAR
         DISPLAY 'File error on NAMEADDR.DAT file, code: '
	     NAME-FILE-STATUS
	 GOBACK
     END-IF.
 END DECLARATIVES.
 NAMEADDR-SECTION SECTION.
 NAMEADDR.
     PERFORM INIT
     PERFORM UNTIL FIELD-TERMINATOR IS EQUAL TO F-TERMINATE
	 PERFORM ACCEPT-INPUT
	 PERFORM PROCESS-FUNCTION
     END-PERFORM
     PERFORM TERM
     GOBACK.
/
*    Initialize screen and file. If file is not found create it.
*    Open the file for reading and updating. If the file does not
*    exist, create it.
*
 INIT.
     PERFORM SCR-CLEAR
     OPEN I-O NAME-FILE
     IF NAME-FILE-STATUS IS NOT EQUAL TO ZERO
	 OPEN OUTPUT NAME-FILE
	 PERFORM INIT-CHK-FILE-STATUS
	 CLOSE NAME-FILE
	 PERFORM INIT-CHK-FILE-STATUS
	 OPEN I-O NAME-FILE
	 PERFORM INIT-CHK-FILE-STATUS
     END-IF
     DISPLAY SCREEN-LITERALS WITH NO ADVANCING
*
*    Set auto-enter mode when fields accepted from screen
*
     MOVE SPACES TO ACCEPT-PARMS.
     MOVE 'Y' TO ACCEPT-AUTO-ENTER.
     CALL 'ACCEPT_CONTROL' USING ACCEPT-PARMS.
*
     MOVE SPACES TO DATA-RECORD
     PERFORM REPOSITION-CURSOR.
*
*    Abort if file status is non-zero
*
 INIT-CHK-FILE-STATUS.
     IF NAME-FILE-STATUS IS NOT EQUAL TO ZERO
         DISPLAY 'File error on NAMEADDR.DAT file, code: '
	     NAME-FILE-STATUS
	 GOBACK.
*
*    Process file access requests
*
 PROCESS-FUNCTION.
     PERFORM
	 IF FIELD-TERMINATOR IS EQUAL TO F-ADD
	     PERFORM P-ADD
	 ELSE
	 IF FIELD-TERMINATOR IS EQUAL TO F-READ
	     PERFORM P-READ
	 ELSE
	 IF FIELD-TERMINATOR IS EQUAL TO F-NEXT
	     PERFORM P-NEXT
	 ELSE
	 IF FIELD-TERMINATOR IS EQUAL TO F-UPDATE
	    PERFORM P-UPDATE
	 ELSE
	 IF FIELD-TERMINATOR IS EQUAL TO F-DELETE
	    PERFORM P-DELETE
	 ELSE
	 IF FIELD-TERMINATOR IS NOT EQUAL TO F-TERMINATE
	     PERFORM BEEPP
	 END-IF
     END-PERFORM
     PERFORM ISSUE-MESSAGE.
*
*    Routine to issue message on the basis of file status
*
 ISSUE-MESSAGE.
     PERFORM
         IF NAME-FILE-STATUS IS EQUAL TO ZERO OR '02'
	     MOVE ZERO TO NAME-FILE-STATUS
             MOVE 'Request completed successfully'
		 TO MESSAGE-TEXT
	 ELSE
         IF NAME-FILE-STATUS IS EQUAL TO '10'
             MOVE 'End of file detected'
		 TO MESSAGE-TEXT
	 ELSE
         IF NAME-FILE-STATUS IS EQUAL TO '22'
             MOVE 'Duplicate entry rejected'
		 TO MESSAGE-TEXT
	 ELSE
         IF NAME-FILE-STATUS IS EQUAL TO '23'
             MOVE 'No record found for requested key'
		 TO MESSAGE-TEXT
	 ELSE
         IF NAME-FILE-STATUS IS EQUAL TO '24'
             MOVE 'No more space on NAMEADDR.DAT file'
		 TO MESSAGE-TEXT
	 END-IF
     END-PERFORM
     PERFORM DISPLAY-MESSAGE.
*
*    Display message
*
 DISPLAY-MESSAGE.
     DISPLAY ATTR-BRIGHT ELB '22;25H' MESSAGE-TEXT
	 ATTR-NORMAL.
*
*    Add a record
*
 P-ADD.
     PERFORM MOVE-DATA-TO-RECORD
     WRITE NA-RECORD.
*
*    Read the record whose key is greater than or equal the
*    requested value.
*
 P-READ.
     MOVE SPACES TO NA-RECORD
     PERFORM GET-CURSOR-POSITION
     PERFORM
	 IF CURPOS IS EQUAL TO FLD-ZIP
	     MOVE DATA-ZIP TO NA-ZIP
	     START NAME-FILE KEY IS NOT LESS THAN NA-ZIP
	 ELSE
	 IF CURPOS IS EQUAL TO FLD-PHONE
	     MOVE DATA-PHONE TO NA-PHONE
	     START NAME-FILE KEY IS NOT LESS THAN NA-PHONE
	 ELSE
	 IF CURPOS IS EQUAL TO FLD-COMPANY
	     MOVE DATA-COMPANY TO NA-COMPANY
	     START NAME-FILE KEY IS NOT LESS THAN NA-COMPANY
	 ELSE
	 IF CURPOS IS EQUAL TO FLD-CITY
			    OR FLD-STATE
	     MOVE DATA-ST-CITY TO NA-ST-CITY
	     START NAME-FILE KEY IS NOT LESS THAN NA-ST-CITY
	 ELSE
	     MOVE DATA-NAME TO NA-NAME
	     START NAME-FILE KEY IS NOT LESS THAN NA-NAME
	 END-IF
     END-PERFORM
     PERFORM COND-READ-NEXT-DISPLAY.
*
*    Read next record if prior start was successfull
*
 COND-READ-NEXT-DISPLAY.
     IF NAME-FILE-STATUS IS EQUAL TO ZERO
	 READ NAME-FILE NEXT
	 IF NAME-FILE-STATUS IS EQUAL TO ZERO
	     MOVE NA-RECORD TO DATA-RECORD
	     PERFORM SCR-DISPLAY-FIELDS
	 END-IF
     END-IF.
*
*    Read the next record
*
 P-NEXT.
     MOVE SPACES TO NA-RECORD
     PERFORM GET-CURSOR-POSITION
     PERFORM COND-READ-NEXT-DISPLAY.
*
*    Update a record
*
 P-UPDATE.
     IF DATA-NAME IS NOT EQUAL TO NA-NAME
	 DELETE NAME-FILE RECORD
	 PERFORM MOVE-DATA-TO-RECORD
	 WRITE NA-RECORD
     ELSE
	 PERFORM MOVE-DATA-TO-RECORD
	 REWRITE NA-RECORD.
*
*    Delete a record
*
 P-DELETE.
     PERFORM MOVE-DATA-TO-RECORD
     DELETE NAME-FILE RECORD.
*
*    Routine to get current cursor position
*
 GET-CURSOR-POSITION.
     CALL 'DISPLAY_GET_CURSOR' USING CURPOS.
*
*    Move data to file record
*
 MOVE-DATA-TO-RECORD.
     MOVE DATA-RECORD TO NA-RECORD.
*
*    Terminate processing
*
 TERM.
     PERFORM SCR-CLEAR
     MOVE 'N' TO ACCEPT-AUTO-ENTER.
     CALL 'ACCEPT_CONTROL' USING ACCEPT-PARMS.
     CLOSE NAME-FILE
     PERFORM INIT-CHK-FILE-STATUS.
*
*    Here to position cursor and accept data field by field
*
 ACCEPT-INPUT.
     SET FLD-INDEX TO 1
     PERFORM ACCEPT-INPUT-100.
*
*    Loop here to accept data without moving cursor
*
 ACCEPT-INPUT-100.
*
     PERFORM REPOSITION-CURSOR
     ACCEPT VL-FIELD
     PERFORM UPPERCASE-FIELD
     PERFORM MOVE-SCREEN-TO-RECORD
     PERFORM SCR-DISP-FIELD-NORMAL
*
*    Process field terminator
*
     IF FIELD-TERMINATOR IS EQUAL TO C-RETURN OR C-TAB OR ZERO
	 IF FLD-INDEX IS LESS THAN FLD-COUNT
	     SET FLD-INDEX UP BY 1
	 ELSE
	     SET FLD-INDEX TO 1
	 END-IF
	 GO TO ACCEPT-INPUT-100
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-BACKTAB
	 IF FLD-INDEX IS NOT EQUAL TO 1
	     SET FLD-INDEX DOWN BY 1
	 ELSE
	     SET FLD-INDEX TO FLD-COUNT
	 END-IF
	 GO TO ACCEPT-INPUT-100
*
*    Check for the home key
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-HOME
	 SET FLD-INDEX TO 1
	 GO TO ACCEPT-INPUT-100
*
*    Check for erase field (END)
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-END
	 PERFORM SET-VL-LENGTH
	 MOVE SPACE TO VL-FIELD
	 PERFORM MOVE-SCREEN-TO-RECORD
	 PERFORM SCR-DISP-FIELD-REVERSE
	 GO TO ACCEPT-INPUT-100
/
*    Reset complete screen if ESC
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-ESC
	 MOVE SPACE TO DATA-RECORD
	 PERFORM SCR-DISPLAY-FIELDS
	 GO TO ACCEPT-INPUT-100.
*
*    Convert VL-FIELD to uppercase characters
*
 UPPERCASE-FIELD.
     MOVE ZERO TO TEMP1.
     PERFORM VARYING TEMP2 FROM 1 BY 1
	 UNTIL TEMP2 IS GREATER THAN VL-LENGTH
	 MOVE VL-CHAR(TEMP2) TO TEMP1-LSB
	 IF TEMP1 IS NOT LESS THAN 97
		  AND NOT GREATER THAN 123
	     SUBTRACT 32 FROM TEMP1
	     MOVE TEMP1-LSB TO VL-CHAR(TEMP2)
	 END-IF
     END-PERFORM.
*
*    Routine to reposition cursor and set field length
*
 REPOSITION-CURSOR.
     PERFORM SET-VL-LENGTH
     PERFORM MOVE-RECORD-TO-SCREEN
     PERFORM SCR-DISP-FIELD-REVERSE.
*
*    Copy all fields to the screen with normal attributes
*
 SCR-DISPLAY-FIELDS.
     PERFORM VARYING FLD-INDEX FROM 1 BY 1
	 UNTIL FLD-INDEX IS GREATER THAN FLD-COUNT
	 PERFORM SET-VL-LENGTH
	 PERFORM MOVE-RECORD-TO-SCREEN
	 PERFORM SCR-DISP-FIELD-NORMAL
     END-PERFORM.
     MOVE SPACE TO MESSAGE-TEXT
     PERFORM DISPLAY-MESSAGE
     SET FLD-INDEX TO 1.
*
*    Little routine to display one field in reverse video
*
 SCR-DISP-FIELD-REVERSE.
     DISPLAY ATTR-REVERSE-VIDEO
             ELB FLD-LINE(FLD-INDEX) ';'
             FLD-COLUMN(FLD-INDEX) 'H' VL-FIELD
	     ATTR-NORMAL
             ELB FLD-LINE(FLD-INDEX) ';'
             FLD-COLUMN(FLD-INDEX) 'H' WITH NO ADVANCING.
*
*    Little routine to display one field
*
 SCR-DISP-FIELD-NORMAL.
     DISPLAY ELB FLD-LINE(FLD-INDEX) ';'
             FLD-COLUMN(FLD-INDEX) 'H' VL-FIELD
             ELB FLD-LINE(FLD-INDEX) ';'
             FLD-COLUMN(FLD-INDEX) 'H' WITH NO ADVANCING.
*
*    Little routine to set VL-LENGTH from field table
*
 SET-VL-LENGTH.
     MOVE FLD-LENGTH(FLD-INDEX) TO VL-LENGTH.
*
*    Routine which beeps the speaker and leaves the cursor alone
*
 BEEPP.
     DISPLAY C-BELL WITH NO ADVANCING.
*
*    Here to terminate
*
 SCR-TERM.
     PERFORM SCR-CLEAR
     GOBACK.
*
*    Clear screen using ANSI escape sequences
*
 SCR-CLEAR.
     DISPLAY SCR-CLEAR-SCREEN WITH NO ADVANCING.
/
*    Routine to move screen field to record data
*
 MOVE-SCREEN-TO-RECORD.
     PERFORM MOVE-SDRD-0 THROUGH MOVE-SDRD-EXIT.
 MOVE-SDRD-0.
     SET TEMP1 TO FLD-INDEX.
     GO TO MOVE-SDRD-1
	   MOVE-SDRD-2
	   MOVE-SDRD-3
	   MOVE-SDRD-4
	   MOVE-SDRD-5
	   MOVE-SDRD-6
	   MOVE-SDRD-7
	   MOVE-SDRD-8
	   MOVE-SDRD-9
	   MOVE-SDRD-10
	   MOVE-SDRD-11
	   MOVE-SDRD-12
	   MOVE-SDRD-13 DEPENDING ON TEMP1.
     GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-1. PERFORM MOVE-SDRD-FIRST GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-2. PERFORM MOVE-SDRD-LAST GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-3. PERFORM MOVE-SDRD-INIT GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-4. PERFORM MOVE-SDRD-PHONE GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-5. PERFORM MOVE-SDRD-COMPANY GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-6. PERFORM MOVE-SDRD-ADDRESS GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-7. PERFORM MOVE-SDRD-ADDRESS GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-8. PERFORM MOVE-SDRD-ADDRESS GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-9. PERFORM MOVE-SDRD-ADDRESS GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-10. PERFORM MOVE-SDRD-CITY GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-11. PERFORM MOVE-SDRD-STATE GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-12. PERFORM MOVE-SDRD-ZIP GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-13. PERFORM MOVE-SDRD-COMMENT GO TO MOVE-SDRD-EXIT.
 MOVE-SDRD-EXIT. EXIT.
*
*    Move first name
*
 MOVE-SDRD-FIRST.
     MOVE VL-FIELD TO DATA-FIRST-NAME.
*
*    Move last name
*
 MOVE-SDRD-LAST.
     MOVE VL-FIELD TO DATA-LAST-NAME.
*
*    Move middle initial
*
 MOVE-SDRD-INIT.
     MOVE VL-FIELD TO DATA-INITIAL.
*
*    Move phone
*
 MOVE-SDRD-PHONE.
     MOVE VL-FIELD TO DATA-PHONE.
*
*    Move company name
*
 MOVE-SDRD-COMPANY.
     MOVE VL-FIELD TO DATA-COMPANY.
*
*    Move address
*
 MOVE-SDRD-ADDRESS.
     SUBTRACT -1 FLD-ADDRESS-MIN FROM TEMP1
     MOVE VL-FIELD TO DATA-ADDRESS(TEMP1).
*
*    Move city
*
 MOVE-SDRD-CITY.
     MOVE VL-FIELD TO DATA-CITY.
*
*    Move state
*
 MOVE-SDRD-STATE.
     MOVE VL-FIELD TO DATA-STATE.
*
*    Move postal code/zip
*
 MOVE-SDRD-ZIP.
     MOVE VL-FIELD TO DATA-ZIP.
*
*    Move comments
*
 MOVE-SDRD-COMMENT.
     MOVE VL-FIELD TO DATA-COMMENT.
/
*    Routine to move record data to screen field
*
 MOVE-RECORD-TO-SCREEN.
     PERFORM MOVE-RDSD-0 THROUGH MOVE-RDSD-EXIT.
 MOVE-RDSD-0.
     PERFORM SET-VL-LENGTH
     SET TEMP1 TO FLD-INDEX.
     GO TO MOVE-RDSD-1
	   MOVE-RDSD-2
	   MOVE-RDSD-3
	   MOVE-RDSD-4
	   MOVE-RDSD-5
	   MOVE-RDSD-6
	   MOVE-RDSD-7
	   MOVE-RDSD-8
	   MOVE-RDSD-9
	   MOVE-RDSD-10
	   MOVE-RDSD-11
	   MOVE-RDSD-12
	   MOVE-RDSD-13 DEPENDING ON TEMP1.
     GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-1. PERFORM MOVE-RDSD-FIRST GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-2. PERFORM MOVE-RDSD-LAST GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-3. PERFORM MOVE-RDSD-INIT GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-4. PERFORM MOVE-RDSD-PHONE GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-5. PERFORM MOVE-RDSD-COMPANY GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-6. PERFORM MOVE-RDSD-ADDRESS GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-7. PERFORM MOVE-RDSD-ADDRESS GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-8. PERFORM MOVE-RDSD-ADDRESS GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-9. PERFORM MOVE-RDSD-ADDRESS GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-10. PERFORM MOVE-RDSD-CITY GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-11. PERFORM MOVE-RDSD-STATE GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-12. PERFORM MOVE-RDSD-ZIP GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-13. PERFORM MOVE-RDSD-COMMENT GO TO MOVE-RDSD-EXIT.
 MOVE-RDSD-EXIT. EXIT.
*
*    Move first name
*
 MOVE-RDSD-FIRST.
     MOVE DATA-FIRST-NAME TO VL-FIELD.
*
*    Move last name
*
 MOVE-RDSD-LAST.
     MOVE DATA-LAST-NAME TO VL-FIELD.
*
*    Move middle initial
*
 MOVE-RDSD-INIT.
     MOVE DATA-INITIAL TO VL-FIELD.
*
*    Move phone
*
 MOVE-RDSD-PHONE.
     MOVE DATA-PHONE TO VL-FIELD.
*
*    Move company name
*
 MOVE-RDSD-COMPANY.
     MOVE DATA-COMPANY TO VL-FIELD.
*
*    Move address
*
 MOVE-RDSD-ADDRESS.
     SUBTRACT -1 FLD-ADDRESS-MIN FROM TEMP1.
     MOVE DATA-ADDRESS(TEMP1) TO VL-FIELD.
*
*    Move city
*
 MOVE-RDSD-CITY.
     MOVE DATA-CITY TO VL-FIELD.
*
*    Move state
*
 MOVE-RDSD-STATE.
     MOVE DATA-STATE TO VL-FIELD.
*
*    Move postal code/zip
*
 MOVE-RDSD-ZIP.
     MOVE DATA-ZIP TO VL-FIELD.
*
*    Move comments
*
 MOVE-RDSD-COMMENT.
     MOVE DATA-COMMENT TO VL-FIELD.
