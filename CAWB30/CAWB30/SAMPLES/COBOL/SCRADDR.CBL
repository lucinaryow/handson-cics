*$CALL,APOST,COMP-5,DIALECT-REALIA4
 IDENTIFICATION DIVISION.
 PROGRAM-ID. SCRADDR.
*
*  Sample name/address file maintenance program. This program
*  illustrates screen and indexed file usage with CA-Realia COBOL.
*
*  Copyright (c) 1992 Computer Associates International, Inc.
*
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-PC.
 OBJECT-COMPUTER. IBM-PC.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
*
*    Name/address file
*
     SELECT NAME-FILE
         ASSIGN TO 'NAMEADDR.DAT'
	 ORGANIZATION IS INDEXED
	 RECORD KEY IS NA-NAME
	 ALTERNATE RECORD KEY IS NA-ZIP WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-PHONE WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-COMPANY WITH DUPLICATES
	 ALTERNATE RECORD KEY IS NA-ST-CITY WITH DUPLICATES
	 ACCESS MODE IS DYNAMIC
	 FILE STATUS IS NAME-FILE-STATUS.
 DATA DIVISION.
 FILE SECTION.
*
*    Name/address file
*
 FD  NAME-FILE
     LABEL RECORD IS STANDARD.
*
*    Name/address file record
*
 01  NA-RECORD.
     05  NA-NAME.
	 10  NA-LAST-NAME		   PIC X(20).
	 10  NA-FIRST-NAME		   PIC X(10).
	 10  NA-INITIAL 		   PIC X.
     05  NA-ZIP 			   PIC X(9).
     05  NA-COMPANY			   PIC X(50).
     05  NA-PHONE			   PIC X(10).
     05  NA-ST-CITY.
	 10  NA-STATE			   PIC XX.
	 10  NA-CITY			   PIC X(15).
     05  NA-COMMENT			   PIC X(50).
     05  NA-ADDRESS			   PIC X(50)
	 OCCURS 4 TIMES INDEXED BY NA-ADDRESS-INDEX.
     05  FILLER 			   PIC X(33).
*
 WORKING-STORAGE SECTION.
*
*    Name/address file status
*
 01  NAME-FILE-STATUS			   PIC XX.
 01  FILLER REDEFINES NAME-FILE-STATUS.
     05  NAME-FILE-STATUS-X1		   PIC X.
     05  NAME-FILE-STATUS-X2		   PIC X.
*
*    Special key values and the functions they perform
*
*    Carriage-return			   move to next field
*    Tab				   move to next field
*    Shift-Tab				   move to previous field
*    Escape				   Clear all input fields
*    End				   Erase field
*    Control-F1 			   Terminate program
*    F1 				   Add record
*    F2 				   Read record by key
*    F3 				   Read next record
*    F4 				   Update record
*    F5 				   Delete record
*
 01  FILLER.
     05  C-RETURN    VALUE +13		   PIC S9(4) COMP-5.
     05  C-TAB	     VALUE +9		   PIC S9(4) COMP-5.
     05  C-BACKTAB   VALUE +15		   PIC S9(4) COMP-5.
     05  C-ESC	     VALUE +27		   PIC S9(4) COMP-5.
     05  C-HOME      VALUE +71		   PIC S9(4) COMP-5.
     05  C-END	     VALUE +79		   PIC S9(4) COMP-5.
     05  F-TERMINATE VALUE +94		   PIC S9(4) COMP-5.
     05  F-ADD	    VALUE +59		   PIC S9(4) COMP-5.
     05  F-READ     VALUE +60		   PIC S9(4) COMP-5.
     05  F-NEXT     VALUE +61		   PIC S9(4) COMP-5.
     05  F-UPDATE   VALUE +62		   PIC S9(4) COMP-5.
     05  F-DELETE   VALUE +63		   PIC S9(4) COMP-5.
*
*    Area to contain message text for ISSUE-MESSAGE
*
 01  MESSAGE-TEXT			   PIC X(34).
*
*    Field values. Contains field number.
*
 01  FILLER.
     05  FLD-PHONE	VALUE +4	   PIC S9(4) COMP-5.
     05  FLD-COMPANY	VALUE +5	   PIC S9(4) COMP-5.
     05  FLD-CITY	VALUE +10	   PIC S9(4) COMP-5.
     05  FLD-STATE	VALUE +11	   PIC S9(4) COMP-5.
     05  FLD-ZIP	VALUE +12	   PIC S9(4) COMP-5.
     05  FLD-COMMENT	VALUE +13	   PIC S9(4) COMP-5.
*
*    Data fields
*
 01  DATA-RECORD.
     05  DATA-NAME.
	 10  DATA-LAST-NAME		   PIC X(20).
	 10  DATA-FIRST-NAME		   PIC X(10).
	 10  DATA-INITIAL		   PIC X.
     05  DATA-ZIP			   PIC X(9).
     05  DATA-COMPANY			   PIC X(50).
     05  DATA-PHONE			   PIC X(10).
     05  DATA-ST-CITY.
	 10  DATA-STATE 		   PIC X(2).
	 10  DATA-CITY			   PIC X(15).
     05  DATA-ADDRESS-1 		   PIC X(50).
     05  DATA-ADDRESS-2 		   PIC X(50).
     05  DATA-ADDRESS-3 		   PIC X(50).
     05  DATA-ADDRESS-4 		   PIC X(50).
     05  DATA-COMMENT			   PIC X(50).
*
*    Parameter for determining field we are processing
*
 01  CURRENT-FIELD			   PIC S9(4) COMP-5.
 01  VALID-OPERATION-FLAG		   PIC X.
     88  VALID-OPERATION   VALUE 'y'.
     88  INVALID-OPERATION VALUE 'n'.
*
 SCREEN SECTION.
*
 01  SCR-CLEAR-SCREEN.
     05  BLANK SCREEN BACKGROUND-COLOR 0 FOREGROUND-COLOR 7.
*
*    Screen displayed once
*
 01  SCREEN-LITERALS.
     05  BLANK SCREEN.
     05  REVERSE-VIDEO.
         10  VALUE 'Name/Address'
	     LINE 1 COLUMN 35.
         10  VALUE 'F1-Add F2-Read F3-Next F4-Update F5-Delete'
	     LINE 25 COLUMN 17.
         10  VALUE '  Ctrl F1-Exit'
	     LINE 25 COLUMN 59.
     05  HIGHLIGHT.
         10  VALUE 'First Name:'
	     LINE 3 COLUMN 10.
         10  VALUE 'Last:'
	     LINE 3 COLUMN 35.
         10  VALUE 'Phone:'
	     LINE 4 COLUMN 10.
         10  VALUE 'Company name:'
	     LINE 5 COLUMN 10.
         10  VALUE 'City:'
	     LINE 10 COLUMN 10.
         10  VALUE 'State:'
	     LINE 11 COLUMN 10.
         10  VALUE 'Zip code:'
	     LINE 11 COLUMN 21.
     05  FILLER.
         10  VALUE 'Address 1:'
	     LINE 6 COLUMN 10.
         10  VALUE 'Address 2:'
	     LINE 7 COLUMN 10.
         10  VALUE 'Address 3:'
	     LINE 8 COLUMN 10.
         10  VALUE 'Address 4:'
	     LINE 9 COLUMN 10.
         10  VALUE 'Comments:'
	     LINE 14 COLUMN 10.
*
*    Screen to accept and display fields with reverse video
*
 01  SCREEN-DATA-RECORD-REVERSED.
     05  SCREEN-FIRST-NAME-R PIC X(10) USING DATA-FIRST-NAME
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 3 COLUMN 24.
     05  SCREEN-LAST-NAME-R PIC X(20) USING DATA-LAST-NAME
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 3 COLUMN 41.
     05  SCREEN-INITIAL-R PIC X        USING DATA-INITIAL
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 3 COLUMN 64.
     05  SCREEN-PHONE-R PIC X(10)      USING DATA-PHONE
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 4 COLUMN 24.
     05  SCREEN-COMPANY-R PIC X(50)    USING DATA-COMPANY
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 5 COLUMN 24.
     05  SCREEN-ADDRESS-1-R PIC X(50)  USING DATA-ADDRESS-1
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 6 COLUMN 24.
     05  SCREEN-ADDRESS-2-R PIC X(50)  USING DATA-ADDRESS-2
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 7 COLUMN 24.
     05  SCREEN-ADDRESS-3-R PIC X(50)  USING DATA-ADDRESS-3
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 8 COLUMN 24.
     05  SCREEN-ADDRESS-4-R PIC X(50)  USING DATA-ADDRESS-4
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 9 COLUMN 24.
     05  SCREEN-CITY-R PIC X(15)       USING DATA-CITY
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 10 COLUMN 24.
     05  SCREEN-STATE-R PIC X(2)       USING DATA-STATE
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 11 COLUMN 18.
     05  SCREEN-ZIP-R PIC X(9)	       USING DATA-ZIP
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 11 COLUMN 31.
     05  SCREEN-COMMENT-R PIC X(50)    USING DATA-COMMENT
	 REVERSE-VIDEO AUTO-SKIP
	 LINE 14 COLUMN 24.
*
*    Screen to display fields with normal attributes
*
 01  SCREEN-DATA-RECORD.
     05  SCREEN-FIRST-NAME PIC X(10) FROM DATA-FIRST-NAME
	 LINE 3 COLUMN 24.
     05  SCREEN-LAST-NAME PIC X(20) FROM DATA-LAST-NAME
	 LINE 3 COLUMN 41.
     05  SCREEN-INITIAL PIC X	     FROM DATA-INITIAL
	 LINE 3 COLUMN 64.
     05  SCREEN-PHONE PIC X(10)      FROM DATA-PHONE
	 LINE 4 COLUMN 24.
     05  SCREEN-COMPANY PIC X(50)    FROM DATA-COMPANY
	 LINE 5 COLUMN 24.
     05  SCREEN-ADDRESS-1 PIC X(50)  FROM DATA-ADDRESS-1
	 LINE 6 COLUMN 24.
     05  SCREEN-ADDRESS-2 PIC X(50)  FROM DATA-ADDRESS-2
	 LINE 7 COLUMN 24.
     05  SCREEN-ADDRESS-3 PIC X(50)  FROM DATA-ADDRESS-3
	 LINE 8 COLUMN 24.
     05  SCREEN-ADDRESS-4 PIC X(50)  FROM DATA-ADDRESS-4
	 LINE 9 COLUMN 24.
     05  SCREEN-CITY PIC X(15)	     FROM DATA-CITY
	 LINE 10 COLUMN 24.
     05  SCREEN-STATE PIC X(2)	     FROM DATA-STATE
	 LINE 11 COLUMN 18.
     05  SCREEN-ZIP PIC X(9)	     FROM DATA-ZIP
	 LINE 11 COLUMN 31.
     05  SCREEN-COMMENT PIC X(50)    FROM DATA-COMMENT
	 LINE 14 COLUMN 24.
*
 PROCEDURE DIVISION.
 DECLARATIVES.
 DECL-SECTION SECTION.
     USE AFTER STANDARD ERROR PROCEDURE ON NAME-FILE.
 DECL-PAR.
     IF NAME-FILE-STATUS-X1 IS EQUAL TO '9'
	 PERFORM SCR-CLEAR
         DISPLAY 'File error on NAMEADDR.DAT file, code: '
	     NAME-FILE-STATUS
	 GOBACK
     END-IF.
 END DECLARATIVES.
 NAMEADDR-SECTION SECTION.
 NAMEADDR.
     PERFORM INIT
     PERFORM UNTIL FIELD-TERMINATOR IS EQUAL TO F-TERMINATE
	 PERFORM ACCEPT-INPUT
	 PERFORM PROCESS-FUNCTION
     END-PERFORM
     PERFORM TERMINATE-PROGRAM
     GOBACK.
*
*    Initialize screen and file. If file is not found create it.
*    Open the file for reading and updating. If the file does not
*    exist, create it.
*
 INIT.
     PERFORM SCR-CLEAR
     OPEN I-O NAME-FILE
     IF NAME-FILE-STATUS IS NOT EQUAL TO ZERO
	 OPEN OUTPUT NAME-FILE
	 CLOSE NAME-FILE
	 OPEN I-O NAME-FILE
     END-IF
     DISPLAY SCREEN-LITERALS
     MOVE SPACES TO DATA-RECORD.
*
*    Process file access requests
*
 PROCESS-FUNCTION.
*
     EVALUATE FIELD-TERMINATOR
	 WHEN F-ADD
	     PERFORM P-ADD
	 WHEN F-READ
	     PERFORM P-READ
	 WHEN F-NEXT
	     PERFORM P-NEXT
	 WHEN F-UPDATE
	     PERFORM P-UPDATE
	 WHEN F-DELETE
	     PERFORM P-DELETE
	 WHEN NOT F-TERMINATE
	     SET INVALID-OPERATION TO TRUE
*		send a beep to user
             DISPLAY X'07'.
*
     IF NOT (INVALID-OPERATION)
	 PERFORM ISSUE-MESSAGE.
     SET VALID-OPERATION TO TRUE.
*
*    Routine to issue message on the basis of file status
*
 ISSUE-MESSAGE.
*
     EVALUATE NAME-FILE-STATUS
	 WHEN ZERO
         WHEN '02'
	     MOVE ZERO TO NAME-FILE-STATUS
             MOVE 'Request completed successfully'
		 TO MESSAGE-TEXT
         WHEN '10'
             MOVE 'End of file detected'
		 TO MESSAGE-TEXT
         WHEN '22'
             MOVE 'Duplicate entry rejected'
		 TO MESSAGE-TEXT
         WHEN '23'
             MOVE 'No record found for requested key'
		 TO MESSAGE-TEXT
         WHEN '24'
             MOVE 'No more space on NAMEADDR.DAT file'
		 TO MESSAGE-TEXT
	 WHEN OTHER
             MOVE 'Unexpected file status on NAMEADDR.DAT file'
		 TO MESSAGE-TEXT.
*
     PERFORM DISPLAY-MESSAGE.
*
*    Display highlighted message
*
 DISPLAY-MESSAGE.
     DISPLAY MESSAGE-TEXT AT LINE 22 COLUMN 25
	 WITH HIGHLIGHT.
*
*    Add record
*
 P-ADD.
     PERFORM MOVE-DATA-TO-RECORD
     WRITE NA-RECORD.
*
*    Read the record whose key is greater than or equal the
*    requested value.
*
 P-READ.
     MOVE SPACES TO NA-RECORD
*
     EVALUATE CURRENT-FIELD
	 WHEN FLD-ZIP
	     MOVE DATA-ZIP TO NA-ZIP
	     START NAME-FILE KEY IS NOT LESS THAN NA-ZIP
	 WHEN FLD-PHONE
	     MOVE DATA-PHONE TO NA-PHONE
	     START NAME-FILE KEY IS NOT LESS THAN NA-PHONE
	 WHEN FLD-COMPANY
	     MOVE DATA-COMPANY TO NA-COMPANY
	     START NAME-FILE KEY IS NOT LESS THAN NA-COMPANY
	 WHEN FLD-CITY
	 WHEN FLD-STATE
	     MOVE DATA-ST-CITY TO NA-ST-CITY
	     START NAME-FILE KEY IS NOT LESS THAN NA-ST-CITY
	 WHEN OTHER
	     MOVE DATA-NAME TO NA-NAME
	     START NAME-FILE KEY IS NOT LESS THAN NA-NAME.
*
     PERFORM COND-READ-NEXT-DISPLAY.
*
*    Read next record if prior start was successfull
*
 COND-READ-NEXT-DISPLAY.
     IF NAME-FILE-STATUS IS EQUAL TO ZERO
	 READ NAME-FILE NEXT
	 IF NAME-FILE-STATUS IS EQUAL TO ZERO
	     MOVE NA-RECORD TO DATA-RECORD
	     PERFORM SCR-DISPLAY-FIELDS.
*
*    Read the next record
*
 P-NEXT.
     MOVE SPACES TO NA-RECORD
     PERFORM COND-READ-NEXT-DISPLAY.
*
*    Update a record
*
 P-UPDATE.
     IF DATA-NAME IS NOT EQUAL TO NA-NAME
	 DELETE NAME-FILE RECORD
	 PERFORM MOVE-DATA-TO-RECORD
	 WRITE NA-RECORD
     ELSE
	 PERFORM MOVE-DATA-TO-RECORD
	 REWRITE NA-RECORD.
*
*    Delete a record
*
 P-DELETE.
     PERFORM MOVE-DATA-TO-RECORD
     DELETE NAME-FILE RECORD.
*
*    Move data to file record
*
 MOVE-DATA-TO-RECORD.
     MOVE DATA-RECORD TO NA-RECORD.
*
*    Terminate processing
*
 TERMINATE-PROGRAM.
     PERFORM SCR-CLEAR
     CLOSE NAME-FILE.
*
*    Here to position cursor and accept data field by field
*
 ACCEPT-INPUT.
     MOVE 1 TO CURRENT-FIELD.
     PERFORM ACCEPT-INPUT-100.
*
*    Loop here to accept data without moving cursor
*
 ACCEPT-INPUT-100.
*
*    Display contents of current field and then accept
*     field in reverse video
*
     EVALUATE CURRENT-FIELD
	 WHEN 1 DISPLAY SCREEN-FIRST-NAME-R
		ACCEPT SCREEN-FIRST-NAME-R
	 WHEN 2 DISPLAY SCREEN-LAST-NAME-R
		ACCEPT SCREEN-LAST-NAME-R
	 WHEN 3 DISPLAY SCREEN-INITIAL-R
		ACCEPT SCREEN-INITIAL-R
	 WHEN 4 DISPLAY SCREEN-PHONE-R
		ACCEPT SCREEN-PHONE-R
	 WHEN 5 DISPLAY SCREEN-COMPANY-R
		ACCEPT SCREEN-COMPANY-R
	 WHEN 6 DISPLAY SCREEN-ADDRESS-1-R
		ACCEPT SCREEN-ADDRESS-1-R
	 WHEN 7 DISPLAY SCREEN-ADDRESS-2-R
		ACCEPT SCREEN-ADDRESS-2-R
	 WHEN 8 DISPLAY SCREEN-ADDRESS-3-R
		ACCEPT SCREEN-ADDRESS-3-R
	 WHEN 9 DISPLAY SCREEN-ADDRESS-4-R
		ACCEPT SCREEN-ADDRESS-4-R
	 WHEN 10 DISPLAY SCREEN-CITY-R
		 ACCEPT SCREEN-CITY-R
	 WHEN 11 DISPLAY SCREEN-STATE-R
		 ACCEPT SCREEN-STATE-R
	 WHEN 12 DISPLAY SCREEN-ZIP-R
		 ACCEPT SCREEN-ZIP-R
	 WHEN 13 DISPLAY SCREEN-COMMENT-R
		 ACCEPT SCREEN-COMMENT-R.
*
*    Uppercase the field
*
     PERFORM UPPERCASE-FIELD
*
*    Redisplay field with normal attributes
*
     EVALUATE CURRENT-FIELD
	 WHEN 1 DISPLAY SCREEN-FIRST-NAME
	 WHEN 2 DISPLAY SCREEN-LAST-NAME
	 WHEN 3 DISPLAY SCREEN-INITIAL
	 WHEN 4 DISPLAY SCREEN-PHONE
	 WHEN 5 DISPLAY SCREEN-COMPANY
	 WHEN 6 DISPLAY SCREEN-ADDRESS-1
	 WHEN 7 DISPLAY SCREEN-ADDRESS-2
	 WHEN 8 DISPLAY SCREEN-ADDRESS-3
	 WHEN 9 DISPLAY SCREEN-ADDRESS-4
	 WHEN 10 DISPLAY SCREEN-CITY
	 WHEN 11 DISPLAY SCREEN-STATE
	 WHEN 12 DISPLAY SCREEN-ZIP
	 WHEN 13 DISPLAY SCREEN-COMMENT.
*
*    Process field terminator
*
     IF FIELD-TERMINATOR IS EQUAL TO C-RETURN OR C-TAB OR ZERO
	 IF CURRENT-FIELD IS LESS THAN FLD-COMMENT
	     ADD 1 TO CURRENT-FIELD
	 ELSE
	     MOVE 1 TO CURRENT-FIELD
	 END-IF
	 GO TO ACCEPT-INPUT-100
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-BACKTAB
	 IF CURRENT-FIELD IS NOT EQUAL TO 1
	     SUBTRACT 1 FROM CURRENT-FIELD
	 ELSE
	     MOVE FLD-COMMENT TO CURRENT-FIELD
	 END-IF
	 GO TO ACCEPT-INPUT-100
*
*    Check for the home key
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-HOME
	 MOVE 1 TO CURRENT-FIELD
	 GO TO ACCEPT-INPUT-100
*
*    Check for erase field (END)
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-END
	 EVALUATE CURRENT-FIELD
	     WHEN 1 MOVE SPACE TO  DATA-FIRST-NAME
	     WHEN 2 MOVE SPACE TO  DATA-LAST-NAME
	     WHEN 3 MOVE SPACE TO  DATA-INITIAL
	     WHEN 4 MOVE SPACE TO  DATA-PHONE
	     WHEN 5 MOVE SPACE TO  DATA-COMPANY
	     WHEN 6 MOVE SPACE TO  DATA-ADDRESS-1
	     WHEN 7 MOVE SPACE TO  DATA-ADDRESS-2
	     WHEN 8 MOVE SPACE TO  DATA-ADDRESS-3
	     WHEN 9 MOVE SPACE TO  DATA-ADDRESS-4
	     WHEN 10 MOVE SPACE TO  DATA-CITY
	     WHEN 11 MOVE SPACE TO  DATA-STATE
	     WHEN 12 MOVE SPACE TO  DATA-ZIP
	     WHEN 13 MOVE SPACE TO  DATA-COMMENT
	 END-EVALUATE
	 GO TO ACCEPT-INPUT-100
*
*    Reset complete screen if ESC
*
     ELSE
     IF FIELD-TERMINATOR IS EQUAL TO C-ESC
	 MOVE SPACE TO DATA-RECORD
	 PERFORM SCR-DISPLAY-FIELDS
	 GO TO ACCEPT-INPUT-100.
*
*    Convert DATA-RECORD to uppercase characters
*
 UPPERCASE-FIELD.
     TRANSFORM DATA-RECORD
         FROM 'abcdefghijklmnopqrstuvwxyz'
         TO   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
*
*    Copy all fields to the screen with normal attributes
*
 SCR-DISPLAY-FIELDS.
*
     DISPLAY SCREEN-DATA-RECORD.
     MOVE SPACE TO MESSAGE-TEXT.
     PERFORM DISPLAY-MESSAGE.
     MOVE 1 TO CURRENT-FIELD.
*
*    Here to terminate
*
 SCR-TERMINATE.
     PERFORM SCR-CLEAR
     GOBACK.
*
*    Clear screen
*
 SCR-CLEAR.
     DISPLAY SCR-CLEAR-SCREEN.
/
